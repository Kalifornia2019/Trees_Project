#!perl

=head1 NAME
 Trees
=cut

use strict;
use warnings;
use Time::Piece;
use Abills::Base qw(time2sec);
use Trees::db::Trees;
use Data::Dumper;

#our ($db, $admin, %conf, %lang, $html);
#my $Trees = Trees->new($db, $admin, \%conf);

our ($db, $admin, %conf, %lang, $html);
our Trees $Trees = Trees->new($db, $admin, \%conf);

#**********************************************************

=head2 add_trees() 
  add_trees
  Returns:
  1
=cut

#**********************************************************
sub add_trees {
  my $Trees       = Trees->new($db, $admin, \%conf);
  my $place       = 'Home';
  my $value_x     = 48.537917;
  my $value_y     = 25.024278;
  my $location_id = 1;

  if ($FORM{ADD}) {
    $Trees->add_trees(
      {
        TREE_AGE    => $FORM{AGE},
        TREE_HEIGHT => $FORM{HEIGHT},
        TREE_CIRCLE => $FORM{CIRCLE},
        TREE_TYPE   => $FORM{SORT},
        TREE_STATUS => $FORM{STATUS},
        VALUE_X     => $FORM{VALUE_X},
        VALUE_Y     => $FORM{VALUE_Y},
        COMMENT     => $FORM{COMMENT},
      }
    );
    $html->message('info', $lang{SUCCESS});
  }
  elsif ($FORM{del}) {
    $Trees->del_species({ ID => $FORM{del} });
    $html->message('err', $lang{ERROR}, $Trees->{errno} . " : " . $Trees->{errstr});
  }
  elsif ($FORM{CHANGE}) {
    $Trees->species_change(\%FORM);
    $html->message('warn', $lang{ERROR}, $Trees->{errno} . " : " . $Trees->{errstr});
  }

  my $button_add = $html->form_input("ADD", $lang{ADD}, { TYPE => "submit" });

  $html->tpl_show(
    _include('trees_add', 'Trees'),
    {
      ID          => $FORM{ID},
      INDEX       => $index,
      BUTTON_ADD  => $button_add,
      SORT        => $html->form_input('SORT', $FORM{sort}),
      AGE         => $html->form_input('AGE', $FORM{age}),
      HEIGHT      => $html->form_input('HEIGHT', $FORM{height}),
      CIRCLE      => $html->form_input('CIRCLE', $FORM{circle}),
      STATUS      => $html->form_input('STATUS', $FORM{status}),
      COMMENT     => $html->form_input('COMMENT', $FORM{comment}),
      VALUE_X     => $html->form_input('VALUE_X', $FORM{value_x}),
      VALUE_Y     => $html->form_input('VALUE_Y', $FORM{value_y}),
      PLACE       => $place,
      VALUE_X     => $value_x,
      VALUE_Y     => $value_y,
      LOCATION_ID => $location_id
    }
  );
  return 1;
}

#**********************************************************

=head2 search_form () 
  search_trees
  Returns:
  1
=cut

#**********************************************************
sub search_form {

  my $locations_arr;
  my $submit = $html->form_input('DRAW', $lang{EDIT}, { TYPE => 'submit' });

  # Add search template
  $html->tpl_show(
    _include('trees_seach', 'Trees'),
    {
      SEARCH        => $html->form_input('search', $lang{TREE_SEARCH}, { TYPE => 'submit' }),
      LOCATIONS_ARR => $locations_arr,

    }
  );

  if ($FORM{search}) {

    my $lest = $Trees->search(
      {
        TREE_AGE    => $FORM{AGE},
        TREE_HEIGHT => $FORM{HEIGHT},
        TREE_TYPE   => $FORM{ADD_TREE_SORT},
        TREE_STATUS => $FORM{STATUS},

      }
    );
    if (!$Trees->{errno}) {
      $html->message('info', $lang{SUCCESS});

    }
    else {
      $html->message('err', $lang{ERROR}, $Trees->{errno} . " : " . $Trees->{errstr});
    }

    my $table = $html->table(
      {
        width   => '100%',
        caption => 'Trees',
        border  => 2,
        title   => [ 'id', $lang{DATE_ADD}, $lang{TREE_AGE}, $lang{TREE_HEIGHT}, $lang{TREE_CIRCLE}, $lang{TREE_TYPE}, $lang{TREE_STATUS}, $lang{X}, $lang{Y}, $lang{COMMENT}, '-', '-' ],
        cols_align      => [ 'center', 'center', 'center', 'center', 'center', 'center', 'center', 'center', 'center' ],
        ID              => 'COMPANY_ID',
        FUNCTION_FIELDS => 'del, change',
      }
    );

    my $list = $Trees->search(
      {
        TREE_AGE    => $FORM{AGE},
        TREE_HEIGHT => $FORM{HEIGHT},
        TREE_CIRCLE => $FORM{CIRCLE},
        TREE_TYPE   => $FORM{ADD_TREE_SORT},
        TREE_STATUS => $FORM{STATUS},
        VALUE_X     => $FORM{VALUE_X},
        VALUE_Y     => $FORM{VALUE_Y},
        COMMENT     => $FORM{COMMENT},
        ,
        COLS_NAME => 1
      }
    );

    # output data to the table from db
    foreach my $line (@$list) {
      my @fields_array = ();

      push @fields_array, $line->{"id"};
      push @fields_array, $line->{"date"};
      push @fields_array, $line->{"tree_age"};
      push @fields_array, $line->{"tree_height"};
      push @fields_array, $line->{"tree_circle"};
      push @fields_array, $line->{"tree_type"};
      push @fields_array, $line->{"tree_status"};
      push @fields_array, $line->{"value_x"};
      push @fields_array, $line->{"value_y"};
      push @fields_array, $line->{"comment"};

      push @fields_array,
      ($html->button($lang{CHANGE}, "index=$index&ID=$line->{id}&AGE=$line->{tree_age}&HEIGHT=$line->{tree_height}&CIRCLE=$line->{tree_circle}&SORT=$line->{tree_type}&STATUS=$line->{tree_status}&COMMENT=$line->{comment}&change=1" . _translate($line->{position}), { class => 'change' }));
      push @fields_array, ($html->button($lang{DELETE}, "index=$index&del=$line->{id}" . _translate($line->{position}), { class => 'del' }));

      $table->addrow(@fields_array);

    }

    print $table->show();

  }

  # delete data from db
  if ($FORM{del}) {
    $Trees->del($FORM{del});
    if (!$Trees->{errno}) {
      $html->message('info', $lang{SUCCESS});
    }
    else {
      $html->message('err', $lang{ERROR}, $Trees->{errno} . " : " . $Trees->{errstr});
    }
  }

  my $button_edit = $html->form_input('chg', $lang{CHANGE}, { TYPE => 'submit' });

  #Change tree in db

  if ($FORM{change}) {

    $html->tpl_show(
      _include('trees_change', 'Trees'),
      {
        ID          => $FORM{ID},
        INDEX       => $index,
        AGE         => $html->form_input('TREE_AGE', $FORM{AGE}),
        HEIGHT      => $html->form_input('TREE_HEIGHT', $FORM{HEIGHT}),
        CIRCLE      => $html->form_input('TREE_CIRCLE', $FORM{CIRCLE}),
        SORT        => $html->form_input('TREE_TYPE', $FORM{SORT}),
        STATUS      => $html->form_input('TREE_STATUS', $FORM{STATUS}),
        COMMENT     => $html->form_input('COMMENT', $FORM{COMMENT}),
        VALUE_X     => $html->form_input('VALUE_X', $FORM{VALUE_X}),
        VALUE_Y     => $html->form_input('VALUE_Y', $FORM{VALUE_Y}),
        BUTTON_EDIT => $button_edit,

        TITLE => $lang{CHANGE},

        ID => $html->form_input('ID', $FORM{ID}, { TYPE => 'hidden' }),
      }
    );

  }

  if ($FORM{chg}) {
    $Trees->change(
      {
        ID          => $FORM{ID},
        TREE_AGE    => $FORM{TREE_AGE},
        TREE_HEIGHT => $FORM{TREE_HEIGHT},
        TREE_CIRCLE => $FORM{TREE_CIRCLE},
        TREE_TYPE   => $FORM{TREE_TYPE},
        TREE_STATUS => $FORM{TREE_STATUS},
        COMMENT     => $FORM{COMMENT},

      }
    );

  }

  return 1;

}

#**********************************************************

=head2 search_count() 
  add_trees
  Returns:
  1
=cut

#**********************************************************
sub search_count {
  my $Trees = Trees->new($db, $admin, \%conf);

  my $result    = $Trees->search_count();
  my $count     = $result->[0]->{number_trees};
  my $count_age = $result->[0]->{sage_trees};

  if ($result) {

    my $rez_o2      = ($count * 2.5);
    my $rez_co2     = ($count * 1.7);
    my $rez_mid_age = ($count_age / $count);
    $html->tpl_show(
      _include('additional_parametres', 'Trees'),
      {
        O2  => $rez_o2,
        CO2 => $rez_co2,
        AGE => $rez_mid_age
      },

    );
  }

  return 1;
}

1;

